name: Build and Deploy Documentation

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[docs]
        # Install additional dependencies that might be needed
        pip install sphinx-rtd-theme myst-parser sphinx-autodoc-typehints nbsphinx
    
    - name: Verify package installation
      run: |
        python -c "import pytidycensus; print('Package installed successfully')"
    
    - name: Build documentation
      run: |
        cd docs
        # Clean any previous builds
        rm -rf _build
        # Build the documentation
        sphinx-build docs docs/_build
    
    - name: Check documentation build
      run: |
        ls -la docs/_build/html/
        echo "Documentation built successfully"
    
    - name: Setup Pages (only on main/master)
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/configure-pages@v3
      
    - name: Upload artifact (only on main/master)
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v4
      with:
        path: './docs/_build/html'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    # Only deploy on pushes to main/master (not PRs)
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2