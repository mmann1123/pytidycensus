name: Python package

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
      fail-fast: false  # Continue testing other versions even if one fails

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # Enable pip caching
        cache-dependency-path: |
          setup.py
          pyproject.toml
          requirements*.txt    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Format check with black
      run: |
        black --check --diff .
      continue-on-error: true  
    
    - name: Import sort check with isort
      run: |
        isort --check-only --diff .
      continue-on-error: true   
    
    # - name: Type check with mypy
    #   run: |
    #     mypy pytidycensus --ignore-missing-imports
    #   continue-on-error: true  # Allow mypy failures for now
    
    - name: Test with pytest
      run: |
        pytest --cov=pytidycensus --cov-report=xml --cov-report=term-missing -k "not integration and not conversation"
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false